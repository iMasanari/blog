---
import { getCollection, type CollectionEntry } from 'astro:content'
import { SITE_NAME, SUGGEST_LIMIT } from '#src/constants'
import Layout from '#src/features/Layout/Layout.astro'
import { components } from '#src/features/Markdown'
import PostPage from '#src/features/PostPage/PostPage.astro'

export const getStaticPaths = async () => {
  const posts = (await getCollection('posts')).sort(
    (a, b) => b.data.date.valueOf() - a.data.date.valueOf(),
  )

  return posts.map((post) => {
    const sameTags = posts
      .filter(
        (v) =>
          v.slug !== post.slug &&
          v.data.tags.some((tag) => post.data.tags.includes(tag)),
      )
      .slice(0, SUGGEST_LIMIT)

    return { params: { slug: post.slug }, props: { post, sameTags } }
  })
}

interface Props {
  post: CollectionEntry<'posts'>
  sameTags: CollectionEntry<'posts'>[]
}

const { post, sameTags } = Astro.props
const { Content } = await post.render()
---

<Layout
  title={`${post.data.title} | ${SITE_NAME}`}
  description={post.data.description}
>
  <PostPage post={post} sameTags={sameTags}>
    <Content components={components} />
  </PostPage>
</Layout>
