---
import { Icon } from 'astro-icon'
import type { CollectionEntry } from 'astro:content'
import { css, mergeStyle } from 'molcss'
import FormattedDate from '../../components/FormattedDate.astro'
import Link from '../../components/Link.astro'
import Tags from '../../components/Tags.astro'

interface Props {
  post: CollectionEntry<'posts'>['data']
  link?: string
}

const { post, link } = Astro.props

const postCardStyle = css`
  padding: 1rem /* 16px */;
  border-radius: 0.25rem /* 4px */;
  box-shadow: 2px 2px 4px #bebebe,
    -2px -2px 4px #fff,
    inset 0 0 0 #bebebe,
    inset 0 0 0 #fff;
`

const postCardLinkStyle = css`
  transition: box-shadow cubic-bezier(0.4, 0, 0.2, 1) 150ms;
  &:has(.title:hover) {
    box-shadow: 0 0 0 #bebebe,
      0 0 0 #fff,
      inset 2px 2px 4px #bebebe,
      inset -2px -2px 4px #fff;
  }
`

const dateContainerStyle = css`
  display: flex;
  align-items: center;
`

const postDateIconStyle = css`
  width: 1.5rem /* 24px */;
  height: 1.5rem /* 24px */;
  margin-right: 0.25rem /* 4px */;
`

const updateDateIconStyle = css`
  width: 1.5rem /* 24px */;
  height: 1.5rem /* 24px */;
  margin-left: 0.5rem /* 8px */;
  margin-right: 0.25rem /* 4px */;
`

const titleStyle = css`
  font-size: 1.25rem /* 20px */;
  line-height: 1.75rem /* 28px */;
`
---

<div class={mergeStyle(postCardStyle, link && postCardLinkStyle)}>
  <div class={dateContainerStyle}>
    <Icon name="ph:calendar-blank" class={postDateIconStyle} />
    <FormattedDate date={post.date} />
    {
      post.update && (
        <>
          <Icon name="ic:outline-update" class={updateDateIconStyle} />
          <FormattedDate date={post.update} />
        </>
      )
    }
  </div>
  {
    link ? (
      <Link href={link} class={`title ${titleStyle}`}>
        {post.title}
      </Link>
    ) : (
      <h1 class={titleStyle}>{post.title}</h1>
    )
  }
  <Tags tags={post.tags} />
  <slot />
</div>
