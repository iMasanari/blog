---
import { Icon } from 'astro-icon'
import type { CollectionEntry } from 'astro:content'
import { tw } from 'tw-tag'
import FormattedDate from '../../components/FormattedDate.astro'
import Link from '../../components/Link.astro'
import Tags from '../../components/Tags.astro'

interface Props {
  post: CollectionEntry<'posts'>['data']
  link?: string
}

const { post, link } = Astro.props

const postCardStyle = tw(`
  p-4
  rounded
  bg-slate-200
  shadow-neumo
  transition-shadow
`)

const postCardLinkStyle = tw(`
  [&:has(.title:hover)]:shadow-neumo-inset
`)

const dateContainerStyle = tw(`
  flex
  items-center
`)

const postDateIconStyle = tw(`
  w-6
  h-6
  mr-1
`)

const updateDateIconStyle = tw(`
  w-6
  h-6
  ml-2
  mr-1
`)

const linkTitleStyle = tw(`
  title
  text-xl
`)

const titleStyle = tw(`
  text-xl
`)
---

<div class:list={[postCardStyle, link && postCardLinkStyle]}>
  <div class={dateContainerStyle}>
    <Icon name="ph:calendar-blank" class={postDateIconStyle} />
    <FormattedDate date={post.date} />
    {
      post.update && (
        <>
          <Icon name="ic:outline-update" class={updateDateIconStyle} />
          <FormattedDate date={post.update} />
        </>
      )
    }
  </div>
  {
    link ? (
      <Link href={link} class={linkTitleStyle}>
        {post.title}
      </Link>
    ) : (
      <h1 class={titleStyle}>{post.title}</h1>
    )
  }
  <Tags tags={post.tags} />
  <slot />
</div>
