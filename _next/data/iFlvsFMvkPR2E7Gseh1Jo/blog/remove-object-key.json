{"pageProps":{"post":{"title":"【ES.next】Objectから任意のキーを削除した新しいObjectを作成する","description":"ブログを作る前、Qiitaに投稿しようと書いていたけど途中でやめ、最近まで忘れていた記事です。Qiitaでもいいけど、せっかくだからこっちに置いておきます。","slug":"remove-object-key","tags":["JavaScript","Babel","TypeScript"],"date":"2018-07-13T12:47:36.148Z","body":"<h2 id=\"はじめに\">はじめに</h2><p>ブログを作る前、Qiitaに投稿しようと書いていたけど途中でやめ、最近まで忘れていた記事です。Qiitaでもいいけど、せっかくだからこっちに置いておきます。</p><h2 id=\"削除したいキーが最初から決まっている場合\">削除したいキーが最初から決まっている場合</h2><p>例えばfooキーを削除した新しいオブジェクトを作成する場合、Rest Propertiesを使用し次のように書くことができます。</p><pre><code class=\"language-jsx\" data-language=\"jsx\" data-highlighted-line-numbers=\"\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">removeFoo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> foo<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>res <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> obj\n\n  <span class=\"token keyword\">return</span> res\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">removeFoo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> foo<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> bar<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// { bar: 0 }</span>\n</code></pre><p><code>foo</code>は削除される値というのをわかりやすくするために、\n<code>const { foo: _removed, ...res } = obj</code>\nと、<code>_removed</code>などに変数名を変更してもいいかもしれません。</p><h2 id=\"削除したいキーが最初から決まっていない場合\">削除したいキーが最初から決まっていない場合</h2><p>では、引数などから与えられたキーを削除するにはどうすればいいのでしょうか。</p><pre><code class=\"language-jsx\" data-language=\"jsx\" data-highlighted-line-numbers=\"\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">removeKey</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>obj <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">delete</span> res<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">return</span> res\n<span class=\"token punctuation\">}</span>\n</code></pre><p>と書くのは少し抵抗がありますよね。</p><p>いろいろ試していると、次の方法で任意のキーを取り除くことができました。</p><pre><code class=\"language-jsx\" data-language=\"jsx\" data-highlighted-line-numbers=\"\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">removeKey</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> _removed<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>res <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> obj\n\n  <span class=\"token keyword\">return</span> res\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">removeKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> foo<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> bar<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// { foo: '' }</span>\n</code></pre><p>ポイントは、<code>{ [key]: _removed }</code>の部分です。\n<code>{ [key], ...res }</code>としただけでは構文エラーとなります。\nおそらく、この書き方だと取り出す<code>key</code>の名前が不明なためかと思います。</p><h2 id=\"まとめ\">まとめ</h2><p>Reduxなどでオブジェクトをimmutableに扱う機会は多いと思います。immutableなHashMapでキーを取り除きたいと思ったときはぜひ使ってみてください！</p><p>この方法は、BabelおよびTypeScriptで動作確認を行いました。両方対応しているということはおそらく仕様にあるということだと思いますが、一度ecma262の仕様から探してみたいですね。</p>"},"next":{"title":"自作ブログのHTMLをminifyした","description":"HTMLはホワイトスペースの問題があり、minifyする、しないの意見が別れるようだ。私は普段、HTMLまでは行わないのだが、今回はhtml-minifierを使用してHTMLを圧縮したのでそのメモを残しておく。","slug":"html-minify","tags":["html-minifier"],"image":"/images/html-minify.png","date":"2018-07-29T14:19:54.882Z"},"prev":{"title":"ブログをHyperappベースの自作ジェネレータに変更した話","description":"作ったばかりのこのブログだが、Hyperappで動くstaticでSPAなサイトに変更した。React Staticを使用していた時とは違って、HTMLの書き出しなどは自分で処理を行っている。まだ未完成な機能もあるが、ビルド後のJavaScriptが約8KBと軽量で気に入っている。","slug":"use-hyperapp","tags":["blog","Hyperapp"],"image":"/images/hyperapp.png","date":"2018-07-12T12:45:07.379Z"},"sameTags":[{"title":"Rust + wasm-bindgen + WebWorkerの環境構築","description":"WebAssembly Advent Calendar 2018の20日目の記事。","slug":"wasm-bindgen-with-worker","tags":["Rust","wasm-bindgen","TypeScript","parcel"],"date":"2018-12-20T14:58:37.388Z","update":"2019-04-20T13:15:27.878Z"},{"title":"React StaticでTypeScriptを使用した時のエラー対処法","description":"static.config.jsのwebpack設定を変更することで起こるエラーの対処法。","slug":"webpacks-rules-in-static-config-js","tags":["ReactStatic","TypeScript","webpack"],"date":"2018-07-03T11:47:13.910Z"},{"title":"ブログで使用した技術","description":"この技術ブログで使用したライブラリやツールを紹介していきます。選定理由についても書きました。","slug":"use-technology","tags":["blog","React","preact","TypeScript","ReactStatic"],"date":"2018-06-30T14:52:29.225Z","update":"2019-04-20T13:15:27.878Z"}]},"__N_SSG":true}