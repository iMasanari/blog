{"pageProps":{"post":{"title":"ブログで使用した技術","description":"この技術ブログで使用したライブラリやツールを紹介していきます。選定理由についても書きました。","slug":"use-technology","tags":["blog","React","preact","TypeScript","ReactStatic"],"date":"2018-06-30T14:52:29.225Z","update":"2019-04-20T13:15:27.878Z","body":"<h2 id=\"追記\">追記</h2><p>現在はHyperappを使用しています。詳しくはこちら\n<a href=\"/blog/use-hyperapp/\">ブログをHyperappベースの自作ジェネレータに変更した話</a></p><h2 id=\"使用した技術\">使用した技術</h2><p>このブログに使った技術の選定理由を紹介していきます。</p><h3 id=\"react-preact\">React (preact)</h3><p><a href=\"https://github.com/facebook/react\">React</a>はFacebook社の作ったViewライブラリ。\n<a href=\"https://github.com/developit/preact\">preact</a>はReactの軽量な互換ライブラリで、今回はこちらを使用しています（が、互換なのでReactと表記していきます）。</p><p>ReactはViewだけのシンプルなライブラリで、よく他のライブラリやフレームワークと組み合わせて使われます。なのでReactをベースに作りながら色々なものを試してみようというのをこのブログの目的にしました。</p><h4 id=\"その他view系ライブラリ\">その他View系ライブラリ</h4><ul><li><a href=\"https://github.com/vuejs/vue\">Vue.js</a>\n悪くはないけど、良さを活かせるというわけでもなさそう。今回はReactのSFCで十分。</li><li><a href=\"https://github.com/angular/angular\">Angular</a>\n重そう。機能過多っぽそう。</li><li><a href=\"https://github.com/hyperapp/hyperapp\">Hyperapp</a>\n私がView系ライブラリに求める条件が一通り揃っていて、preactより軽量。気にはなっているが、SPA+staticなサイトを作るジェネレータがなさそうだったので今回は見送った。いずれ自作して置き換えるかもしれない。</li></ul><h3 id=\"typescript\">TypeScript</h3><p><a href=\"https://github.com/Microsoft/TypeScript\">TypeScript</a>はMicrosoftが開発した言語。\n型のないJavaScriptに戻ることができなくなってしまったため採用しました。</p><p>ReactのPropsをチェックできるのがかなり助かっています。</p><p>類似技術にFlowがありますが、私はそれを「実行前に型エラーを検知するためのツール」だと捉えています。私が型に求めているものは「型付きの言語」であるTypeScriptの方が近いのかなと思っています。\nこの違いについての記事をそのうち書いていきたいです。</p><h3 id=\"react-static\">React Static</h3><p><a href=\"https://github.com/nozzle/react-static\">React Static</a>はSPA+staticなサイトを作るためのジェネレータ。\n今回初めて使用します。</p><p>候補がもう1つあったけど、とりあえず新しい方試してみるかーとこちらを入れてみました。TypeSctiptやMarkdownのサンプルがあったのでそこをちょこっと弄って使っています。\nまた、Markdownには<a href=\"https://github.com/DanWebb/jdown\">jdown</a>を使用しています。</p><h2 id=\"まとめ\">まとめ</h2><p>React Staticが加わったものの、React + TypeScriptといういつもの構成です。\nそこから色々なライブラリを追加していく…予定ですが、もしかしたらいきなりHyperappに置き換えるかも。でも、今の所は基本的なブログの機能を実装していくのが先ですね。</p>"},"next":{"title":"GitHub PagesのUser Pageにdistフォルダをデプロイする","description":"User Pageにはmasterブランチしか指定できないようです。そこに任意のフォルダの中身をデプロイする方法を書きました。","slug":"deploy-to-github-pages-user-page","tags":["GitHubPages"],"date":"2018-07-01T15:11:38.719Z","update":"2018-07-02T13:49:48.876Z"},"prev":{"title":"react-strictでブログ作成しました","description":"この技術ブログを作った理由を書きました。ブログの制作とともに、その内容を記事にしていきたいと思います。","slug":"first-post","tags":["blog"],"date":"2018-06-28T17:08:02.166Z","update":"2018-07-01T12:05:38.079Z"},"sameTags":[{"title":"ブログ開発をParcelに変更した","description":"前回の記事でparcelを使用して便利だったので、このブログのモジュールバンドラをparcelに変更した。決め手は、Tree Shakingがサポートされていたから。","slug":"use-parcel","tags":["parcel","blog"],"date":"2019-04-26T13:55:56.097Z"},{"title":"Rust + wasm-bindgen + WebWorkerの環境構築","description":"WebAssembly Advent Calendar 2018の20日目の記事。","slug":"wasm-bindgen-with-worker","tags":["Rust","wasm-bindgen","TypeScript","parcel"],"date":"2018-12-20T14:58:37.388Z","update":"2019-04-20T13:15:27.878Z"},{"title":"HTMLでは使えないJSX独自の書き方","description":"HTMLとReact JSXの書き方の違いでハマったポイントをまとめた。","slug":"difference-between-jsx-and-html","tags":["React"],"date":"2018-08-13T14:57:58.277Z"}]},"__N_SSG":true}