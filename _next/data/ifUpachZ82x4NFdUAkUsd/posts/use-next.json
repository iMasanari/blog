{"pageProps":{"post":{"title":"ブログをNext.jsベースに変更した","description":"","slug":"use-next","tags":["React","Next.js","blog"],"date":"2020-09-20T06:33:49.199Z","update":null,"image":null,"draft":false},"next":{"title":"ブログをAMP対応（仮）しました","description":"実質、各ページに `export const config = { amp: 'hybrid' }` を追加しただけ。next.js超ラク。","slug":"use-amp","tags":["AMP","Next.js","blog"],"date":"2020-11-28T08:05:18.607Z","update":null,"image":null,"draft":false},"prev":{"title":"ブログ開発をParcelに変更した","description":"前回の記事でparcelを使用して便利だったので、このブログのモジュールバンドラをparcelに変更した。決め手は、Tree Shakingがサポートされていたから。","slug":"use-parcel","tags":["parcel","blog"],"date":"2019-04-26T13:55:56.097Z","update":null,"image":null,"draft":false},"sameTags":[{"title":"Material-UI v4の標準コンポーネントのクラス名を短縮してレンダリングする方法","description":"Material-UI v4で標準コンポーネントのクラス名を短縮するには、`createGenerateClassName` を使用します。このページでは、その `createGenerateClassName` の設定方法を紹介します。","slug":"mui-generate-class-name","tags":["MUI","Next.js"],"date":"2021-10-11T16:40:23.602Z","update":null,"image":null,"draft":false},{"title":"ブログをAMP対応（仮）しました","description":"実質、各ページに `export const config = { amp: 'hybrid' }` を追加しただけ。next.js超ラク。","slug":"use-amp","tags":["AMP","Next.js","blog"],"date":"2020-11-28T08:05:18.607Z","update":null,"image":null,"draft":false},{"title":"ブログ開発をParcelに変更した","description":"前回の記事でparcelを使用して便利だったので、このブログのモジュールバンドラをparcelに変更した。決め手は、Tree Shakingがサポートされていたから。","slug":"use-parcel","tags":["parcel","blog"],"date":"2019-04-26T13:55:56.097Z","update":null,"image":null,"draft":false}],"content":"<p>久しぶりの更新。<br>\nブログの使用技術をReact+Next.jsに変更した。</p>\n<h2>使用技術</h2>\n<h3>変更</h3>\n<ul>\n<li>Hyperapp v1 -> React</li>\n<li>自作フレームワーク？ -> Next.js</li>\n<li>nes.css -> mvp.css</li>\n</ul>\n<h3>続投</h3>\n<ul>\n<li>TypeScript</li>\n</ul>\n<h2>なぜ変えたか</h2>\n<p>Next.jsがSSGに対応し、<code>getStaticPaths</code>、<code>getStaticProps</code>が気になったため。</p>\n<h2>なぜ<code>getStaticPaths</code>、<code>getStaticProps</code>が気になったのか</h2>\n<p>以下のメリットがあるため。</p>\n<ul>\n<li>ダイナミックルーティングをコンポーネント側で設定できる</li>\n<li>データの加工処理を事前に行ってくれる</li>\n</ul>\n<h2>ダイナミックルーティングの設定について</h2>\n<p>SSGでダイナミックルーティングを行う場合、下記の設定が必要である。</p>\n<ul>\n<li>ダイナミックに生成されるURL</li>\n<li>上記URLで使用するテンプレートと、それに渡すデータ</li>\n</ul>\n<p>たいていのSSGツールの場合、上記は設定ファイルに記述する必要がある。しかし、Next.jsでは、<code>pages</code>ディレクトリ内のコンポーネントに記述する。</p>\n<app-code-wrapper title=\"例）pages/blog/[slug].jsx\" lang=\"js\" code=\"// ダイナミックに生成されるURLの一覧\nexport const getStaticPaths = async () => {\n  const contents = getAllPosts() // 記事一覧の取得\n  const paths = contents.map(v => &#x60;/blog/${v.slug}&#x60;)\n\n  return { paths, fallback: false }\n}\n\n// コンポーネントで使用するデータ\nexport const getStaticProps = async ({ params }) => {\n  const post = getPost(params.slug) // 記事データの取得\n\n  const props = { post }\n\n  return { props }\n}\n\n// 使用するコンポーネント\nexport default ({ post }) => {\n  return <div>{/* ... */}</div>\n}\"><pre class=\"shiki dark-plus\" style=\"background-color: #1E1E1E\"><code><span class=\"line\"><span style=\"color: #6A9955\">// ダイナミックに生成されるURLの一覧</span></span>\n<span class=\"line\"><span style=\"color: #C586C0\">export</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">const</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">getStaticPaths</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\">async</span><span style=\"color: #D4D4D4\"> () </span><span style=\"color: #569CD6\">=&gt;</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  </span><span style=\"color: #569CD6\">const</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4FC1FF\">contents</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #DCDCAA\">getAllPosts</span><span style=\"color: #D4D4D4\">() </span><span style=\"color: #6A9955\">// 記事一覧の取得</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  </span><span style=\"color: #569CD6\">const</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4FC1FF\">paths</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #9CDCFE\">contents</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\">map</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #9CDCFE\">v</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">=&gt;</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #CE9178\">`/blog/</span><span style=\"color: #569CD6\">${</span><span style=\"color: #9CDCFE\">v</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">slug</span><span style=\"color: #569CD6\">}</span><span style=\"color: #CE9178\">`</span><span style=\"color: #D4D4D4\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  </span><span style=\"color: #C586C0\">return</span><span style=\"color: #D4D4D4\"> { </span><span style=\"color: #9CDCFE\">paths</span><span style=\"color: #D4D4D4\">, </span><span style=\"color: #9CDCFE\">fallback:</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">false</span><span style=\"color: #D4D4D4\"> }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6A9955\">// コンポーネントで使用するデータ</span></span>\n<span class=\"line\"><span style=\"color: #C586C0\">export</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">const</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">getStaticProps</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\">async</span><span style=\"color: #D4D4D4\"> ({ </span><span style=\"color: #9CDCFE\">params</span><span style=\"color: #D4D4D4\"> }) </span><span style=\"color: #569CD6\">=&gt;</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  </span><span style=\"color: #569CD6\">const</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4FC1FF\">post</span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #DCDCAA\">getPost</span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #9CDCFE\">params</span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #9CDCFE\">slug</span><span style=\"color: #D4D4D4\">) </span><span style=\"color: #6A9955\">// 記事データの取得</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  </span><span style=\"color: #569CD6\">const</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4FC1FF\">props</span><span style=\"color: #D4D4D4\"> = { </span><span style=\"color: #9CDCFE\">post</span><span style=\"color: #D4D4D4\"> }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  </span><span style=\"color: #C586C0\">return</span><span style=\"color: #D4D4D4\"> { </span><span style=\"color: #9CDCFE\">props</span><span style=\"color: #D4D4D4\"> }</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6A9955\">// 使用するコンポーネント</span></span>\n<span class=\"line\"><span style=\"color: #C586C0\">export</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #C586C0\">default</span><span style=\"color: #D4D4D4\"> ({ </span><span style=\"color: #9CDCFE\">post</span><span style=\"color: #D4D4D4\"> }) </span><span style=\"color: #569CD6\">=&gt;</span><span style=\"color: #D4D4D4\"> {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  </span><span style=\"color: #C586C0\">return</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #808080\">&lt;</span><span style=\"color: #569CD6\">div</span><span style=\"color: #808080\">&gt;</span><span style=\"color: #569CD6\">{</span><span style=\"color: #6A9955\">/* ... */</span><span style=\"color: #569CD6\">}</span><span style=\"color: #808080\">&lt;/</span><span style=\"color: #569CD6\">div</span><span style=\"color: #808080\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span></code></pre></app-code-wrapper>\n<p>コンポーネントの1つのファイルにまとまるのは便利。</p>\n<p>なお、<code>getStaticPaths</code>、<code>getStaticProps</code>内では、node.jsで実行（ブラウザのAPI利用不可）されるが、importしたアセットはWebpackのローダーが適用される。\nこのブログでは、<code>require.context</code>ですべてのマークダウンファイルを取得し、<code>mdx-loader</code>等でHTML化して読み込んでいる。</p>\n<h2>最後に</h2>\n<p>Gatby.jsというフレームワークを触ったときに、<code>page</code>ディレクトリの自動ルーティングがあるのにダイナミックルーティングの設定は設定ファイルに書かなければいけないことに違和感があった。Next.jsでは、<code>pages</code>ディレクトリ内のコンポーネントのファイルで<code>getStaticPaths</code>、<code>getStaticProps</code>をexportするという方法を採用している。もし、このブログをまた自作フレームワークを採用する場合、ぜひ採用してみたい。</p>"},"__N_SSG":true}