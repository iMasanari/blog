{"pageProps":{"post":{"title":"Material-UI v4の標準コンポーネントのクラス名を短縮してレンダリングする方法","description":"Material-UI v4で標準コンポーネントのクラス名を短縮するには、`createGenerateClassName` を使用します。このページでは、その `createGenerateClassName` の設定方法を紹介します。","slug":"mui-generate-class-name","tags":["MUI","Next.js"],"date":"2021-10-11T16:40:23.602Z","update":null,"image":null,"draft":false},"next":null,"prev":{"title":"ブログをAMP対応（仮）しました","description":"実質、各ページに `export const config = { amp: 'hybrid' }` を追加しただけ。next.js超ラク。","slug":"use-amp","tags":["AMP","Next.js","blog"],"date":"2020-11-28T08:05:18.607Z","update":null,"image":null,"draft":false},"sameTags":[{"title":"ブログをAMP対応（仮）しました","description":"実質、各ページに `export const config = { amp: 'hybrid' }` を追加しただけ。next.js超ラク。","slug":"use-amp","tags":["AMP","Next.js","blog"],"date":"2020-11-28T08:05:18.607Z","update":null,"image":null,"draft":false},{"title":"ブログをNext.jsベースに変更した","description":"","slug":"use-next","tags":["React","Next.js","blog"],"date":"2020-09-20T06:33:49.199Z","update":null,"image":null,"draft":false}],"content":"<p>Qiitaに投稿予定でしたが、MUI（Material-UI）がv5になってこの方法が非対応になってしまったので、このブログで供養します。</p>\n<h2>Material-UIのクラス名長い問題</h2>\n<p>長くないですか？\n下記は、Next.jsとMaterial-UIを組み合わせたexampleのコードです。実際にSSR/SSGしてみましょう。</p>\n<pre class=\"shiki\" style=\"background-color: #1E1E1E\"><code><span class=\"line\"><span style=\"color: #C586C0\">export</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #C586C0\">default</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">function</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">Index</span><span style=\"color: #D4D4D4\">() {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  </span><span style=\"color: #C586C0\">return</span><span style=\"color: #D4D4D4\"> (</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&#x3C;</span><span style=\"color: #4EC9B0\">Container</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">maxWidth</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"sm\"</span><span style=\"color: #808080\">></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">      </span><span style=\"color: #808080\">&#x3C;</span><span style=\"color: #4EC9B0\">Box</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">my</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #569CD6\">{</span><span style=\"color: #B5CEA8\">4</span><span style=\"color: #569CD6\">}</span><span style=\"color: #808080\">></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&#x3C;</span><span style=\"color: #4EC9B0\">Typography</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">variant</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"h4\"</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">component</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"h1\"</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">gutterBottom</span><span style=\"color: #808080\">></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">          Next.js with TypeScript example</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&#x3C;/</span><span style=\"color: #4EC9B0\">Typography</span><span style=\"color: #808080\">></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&#x3C;</span><span style=\"color: #4EC9B0\">Link</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">href</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"/about\"</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">color</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"secondary\"</span><span style=\"color: #808080\">></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">          Go to the about page</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&#x3C;/</span><span style=\"color: #4EC9B0\">Link</span><span style=\"color: #808080\">></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&#x3C;</span><span style=\"color: #4EC9B0\">ProTip</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #808080\">/></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">        </span><span style=\"color: #808080\">&#x3C;</span><span style=\"color: #4EC9B0\">Copyright</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #808080\">/></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">      </span><span style=\"color: #808080\">&#x3C;/</span><span style=\"color: #4EC9B0\">Box</span><span style=\"color: #808080\">></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&#x3C;/</span><span style=\"color: #4EC9B0\">Container</span><span style=\"color: #808080\">></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  )</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p><code>MuiContainerroot-0-1-1</code>のように、長いクラス名（しかも1つの要素に複数のクラス）になります。</p>\n<pre class=\"shiki\" style=\"background-color: #1E1E1E\"><code><span class=\"line\"><span style=\"color: #808080\">&#x3C;</span><span style=\"color: #569CD6\">div</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">class</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"MuiContainerroot-0-1-1 MuiContainermaxWidthSm-0-1-5\"</span><span style=\"color: #808080\">></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  </span><span style=\"color: #808080\">&#x3C;</span><span style=\"color: #569CD6\">div</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">class</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"MuiBoxroot-0-1-9 MuiBoxroot-0-1-10\"</span><span style=\"color: #808080\">></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&#x3C;</span><span style=\"color: #569CD6\">h1</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">class</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"MuiTypographyroot-0-1-11 MuiTypographyh4-0-1-19 MuiTypographygutterBottom-0-1-31\"</span><span style=\"color: #808080\">></span><span style=\"color: #D4D4D4\">Next.js with TypeScript example</span><span style=\"color: #808080\">&#x3C;/</span><span style=\"color: #569CD6\">h1</span><span style=\"color: #808080\">></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&#x3C;</span><span style=\"color: #569CD6\">a</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">class</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"MuiTypographyroot-0-1-11 MuiLinkroot-0-1-41 MuiLinkunderlineHover-0-1-43 MuiTypographycolorSecondary-0-1-35\"</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">href</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"/about\"</span><span style=\"color: #808080\">></span><span style=\"color: #D4D4D4\">Go to the about page</span><span style=\"color: #808080\">&#x3C;/</span><span style=\"color: #569CD6\">a</span><span style=\"color: #808080\">></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&#x3C;</span><span style=\"color: #569CD6\">p</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">class</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"MuiTypographyroot-0-1-11 makeStylesroot-0-1-47 MuiTypographybody1-0-1-13 MuiTypographycolorTextSecondary-0-1-37\"</span><span style=\"color: #808080\">></span></span>\n<span class=\"line\"><span style=\"color: #6A9955\">&#x3C;!-- ...(略) --></span></span>\n<span class=\"line\"></span></code></pre>\n<p>この記事で紹介する設定を行えば、<code>production</code>設定のビルドで下記のようになります。</p>\n<pre class=\"shiki\" style=\"background-color: #1E1E1E\"><code><span class=\"line\"><span style=\"color: #808080\">&#x3C;</span><span style=\"color: #569CD6\">div</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">class</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"c1 c5\"</span><span style=\"color: #808080\">></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  </span><span style=\"color: #808080\">&#x3C;</span><span style=\"color: #569CD6\">div</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">class</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"c9 c10\"</span><span style=\"color: #808080\">></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&#x3C;</span><span style=\"color: #569CD6\">h1</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">class</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"c11 c19 c31\"</span><span style=\"color: #808080\">></span><span style=\"color: #D4D4D4\">Next.js with TypeScript example</span><span style=\"color: #808080\">&#x3C;/</span><span style=\"color: #569CD6\">h1</span><span style=\"color: #808080\">></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&#x3C;</span><span style=\"color: #569CD6\">a</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">class</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"c11 c41 c43 c35\"</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">href</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"/about\"</span><span style=\"color: #808080\">></span><span style=\"color: #D4D4D4\">Go to the about page</span><span style=\"color: #808080\">&#x3C;/</span><span style=\"color: #569CD6\">a</span><span style=\"color: #808080\">></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #808080\">&#x3C;</span><span style=\"color: #569CD6\">p</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\">class</span><span style=\"color: #D4D4D4\">=</span><span style=\"color: #CE9178\">\"c11 c47 c13 c37\"</span><span style=\"color: #808080\">></span></span>\n<span class=\"line\"><span style=\"color: #6A9955\">&#x3C;!-- ...(略) --></span></span>\n<span class=\"line\"></span></code></pre>\n<p>かなりすっきりしていますね。\n1ページすべてで上記の短縮が行われると、結構大きなHTMLのサイズ差になるのではないでしょうか。</p>\n<h2>設定方法</h2>\n<p>それでは、その設定方法を見ていきましょう。</p>\n<p>クラス名を短縮させるには、<code>createGenerateClassName</code> で設定を行います。\nNext.jsではクライアント側、サーバー(SSR/SSG)側の両方で使用するので、今回は別ファイルで設定しておき、importして使用するようにします。</p>\n<pre class=\"shiki\" style=\"background-color: #1E1E1E\"><code><span class=\"line\"><span style=\"color: #6A9955\">// src/styles.ts</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C586C0\">import</span><span style=\"color: #D4D4D4\"> { </span><span style=\"color: #9CDCFE\">createGenerateClassName</span><span style=\"color: #D4D4D4\"> } </span><span style=\"color: #C586C0\">from</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #CE9178\">'@material-ui/core'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C586C0\">export</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">const</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\">getGenerateClassName</span><span style=\"color: #D4D4D4\"> = () </span><span style=\"color: #569CD6\">=></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  </span><span style=\"color: #DCDCAA\">createGenerateClassName</span><span style=\"color: #D4D4D4\">({</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #9CDCFE\">productionPrefix:</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #CE9178\">'c'</span><span style=\"color: #D4D4D4\">,</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">    </span><span style=\"color: #9CDCFE\">disableGlobal:</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">true</span><span style=\"color: #D4D4D4\">,</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">  })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span></code></pre>\n<p>ポイントは、<code>disableGlobal</code> で、<code>true</code> にすることです。これによって、Material-UI標準のクラス名も短縮されるようになります。\n<code>productionPrefix</code> はクラス名のプレフィックスで、初期値は <code>jss</code> です。今回は、より短くするために、1文字の <code>c</code> を指定しました。それによって、クラス名が <code>c10</code> のようになります。</p>\n<p>次はクライアント側、<code>_app.tsx</code> です。</p>\n<pre class=\"shiki\" style=\"background-color: #1E1E1E\"><code><span class=\"line\"><span style=\"color: #D4D4D4\">// pages/_app.tsx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B5CEA8\">+import { StylesProvider } from '@material-ui/core/styles'</span></span>\n<span class=\"line\"><span style=\"color: #B5CEA8\">+import { getGenerateClassName } from '../src/styles'</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\"> </span></span>\n<span class=\"line\"><span style=\"color: #B5CEA8\">+const generateClassName = getGenerateClassName()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\"> export default function MyApp(props: AppProps) {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">   // 略</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">   return (</span></span>\n<span class=\"line\"><span style=\"color: #B5CEA8\">+    &#x3C;StylesProvider generateClassName={generateClassName}></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">       &#x3C;Head></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">         &#x3C;title>My page&#x3C;/title></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">         &#x3C;meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" /></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">       &#x3C;/Head></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">       &#x3C;ThemeProvider theme={theme}></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">         {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">         &#x3C;CssBaseline /></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">         &#x3C;Component {...pageProps} /></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">       &#x3C;/ThemeProvider></span></span>\n<span class=\"line\"><span style=\"color: #B5CEA8\">+    &#x3C;/StylesProvider></span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">   )</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\"> }</span></span>\n<span class=\"line\"></span></code></pre>\n<p>コンテンツを <code>&#x3C;StylesProvider /></code> で囲み、生成した <code>generateClassName</code> をpropsに渡してください。\nポイントは、<code>generateClassName</code> の生成は1回だけ行うことです。今回のコードでは、コンポーネントの外に出しています。</p>\n<p>続いてサーバー側、<code>_document.tsx</code>です。</p>\n<pre class=\"shiki\" style=\"background-color: #1E1E1E\"><code><span class=\"line\"><span style=\"color: #D4D4D4\">// pages/_document.tsx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #B5CEA8\">+import { getGenerateClassName } from '../src/styles'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\"> // 略</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\"> MyDocument.getInitialProps = async (ctx) => {</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">   // 略</span></span>\n<span class=\"line\"><span style=\"color: #CE9178\">-  const sheets = new ServerStyleSheets()</span></span>\n<span class=\"line\"><span style=\"color: #B5CEA8\">+  const serverGenerateClassName = getGenerateClassName()</span></span>\n<span class=\"line\"><span style=\"color: #B5CEA8\">+  const sheets = new ServerStyleSheets({ serverGenerateClassName })</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\">   // 略</span></span>\n<span class=\"line\"><span style=\"color: #D4D4D4\"> }</span></span>\n<span class=\"line\"></span></code></pre>\n<p><code>generateClassName</code> を生成し、<code>ServerStyleSheets</code> の引数に渡します。\nポイントは、クライアント側と違い、パラメータ名が <code>serverGenerateClassName</code> になっていることと、<code>getInitialProps</code> で <code>generateClassName</code> を生成、つまりアクセスの度に生成し直している所です。</p>\n<p>上記の設定により、Material-UI標準のコンポーネントのクラス名が、短縮されるようになります。</p>\n<h2>最後に</h2>\n<p>供養完了です。\nMUI v5でもできる方法があれば教えて下さい。</p>"},"__N_SSG":true}