{"component":1,"title":"ブログをHyperappベースの自作ジェネレータに変更した話 - Tech SANDBOX","props":{"post":{"title":"ブログをHyperappベースの自作ジェネレータに変更した話","description":"作ったばかりのこのブログだが、Hyperappで動くstaticでSPAなサイトに変更した。React Staticを使用していた時とは違って、HTMLの書き出しなどは自分で処理を行っている。まだ未完成な機能もあるが、ビルド後のJavaScriptが約8KBと軽量で気に入っている。","slug":"use-hyperapp","tags":["blog","Hyperapp"],"image":"/images/hyperapp.png","date":"2018-07-12","contents":"<section class='is-rounded nes-container with-title'><h2 class=title>はじめに</h2><p>作ったばかりのこのブログだが、<a href=https://github.com/hyperapp/hyperapp rel=noopener target=_blank>Hyperapp</a>ベースのstaticでSPAなサイトに変更した。<br><a href=https://github.com/nozzle/react-static rel=noopener target=_blank>React Static</a>を使用していた時とは違って、HTMLの書き出しなどは自分で処理を行っている。まだ未完成な機能もあるが、ビルド後のJavaScriptが約8KBと軽量で気に入っている。</p></section><section class='is-rounded nes-container with-title'><h2 class=title>なぜ変更したのか</h2><ul><li><a href=/blog/use-technology/ >ブログで使用した技術</a>の通り<ul><li><a href=https://github.com/hyperapp/hyperapp rel=noopener target=_blank>Hyperapp</a>があるじゃんとなったのがきっかけ</li></ul></li><li>ブログではstateやactionがページ遷移関係でしか使っていないことに気づいた<ul><li>全て<a href=https://github.com/nozzle/react-static rel=noopener target=_blank>React Static</a>に隠されている</li></ul></li><li>車輪の再発明が好き</li></ul></section><section class='is-rounded nes-container with-title'><h2 class=title>移行について</h2><h3>View部分</h3><p>jsxが流用できたのでView部分は楽だった。もともとSFCのみでクラスコンポーネントがほぼない。メインコンテンツである記事はmarkdown管理なので問題なし。</p><pre class=language-diff><code class=language-diff><span class='token deleted'>-import React from 'react'</span>\n<span class='token deleted'>-import { Link } from 'react-static'</span>\n<span class='token inserted'>+import { h } from 'hyperapp'</span>\n<span class='token inserted'>+import { Link } from '@hyperapp/router'</span>\n\n // 中略\n\n<span class='token deleted'>-export default withRouteData(</span>\n<span class='token deleted'>-  ({ posts }: Props) =></span>\n<span class='token deleted'>-    &lt;div className=\"\"></span>\n<span class='token inserted'>+export default ({ posts }: Props) =></span>\n<span class='token inserted'>+  &lt;div class=\"\"></span>\n\n // 後略\n</code></pre><p>コンポーネントで実際に変更したのはこのくらい。</p><h3>ビルドスクリプトはなんとかなる</h3><p>なんとかなった。</p><p><code>requireWithRollup</code>関数を作れたのが大きい。</p><pre class=language-js><code class=language-js><span class='token comment'>// rollupのpluginを適用してrequireできる</span>\n<span class='token keyword'>const</span> Template <span class='token operator'>=</span> <span class='token keyword'>await</span> <span class='token function'>requireWithRollup</span><span class='token punctuation'>(</span><span class='token string'>'./src/Template.tsx'</span><span class='token punctuation'>,</span> rollupConfig<span class='token punctuation'>)</span>\n</code></pre><p>実装は<a href=https://github.com/iMasanari/imasanari.github.io/blob/use-hyperapp/scripts/requireWithRollup.js rel=noopener target=_blank>ここ</a>。rollup.jsが自身の設定ファイルを読み込む方法を参考にした。</p><p>設定ファイルやビルド方法は<a href=https://github.com/nozzle/react-static rel=noopener target=_blank>React Static</a>を<s>パクった</s>かなり参考にした。</p></section><section class='is-rounded nes-container with-title'><h2 class=title>ルーティング、およびページ遷移部分</h2><p>ここが一番苦労している。エントリーポイントのindex.tsxがごちゃごちゃしてしまった。書き直すならここ。</p></section><section class='is-rounded nes-container with-title'><h2 class=title>未実装部分</h2><p>ページ遷移周りが適当</p><ul><li>ページプリキャッシュ部分<ul><li>現在はリンククリック時にjson読み込み</li><li>prefetchやpreloadで先読み？　それともServise Workerを使う？</li><li>スクリプトが軽いのでいっそJSで雑に先読みしちゃうのもありかも<ul><li>【追記】この方法で仮実装</li></ul></li></ul></li><li>iPhoneでスワイプして戻るとちらつく<ul><li>前画面のデータをキャッシュしててもダメ</li><li><a href=https://github.com/nozzle/react-static rel=noopener target=_blank>React Static</a>の時には起こらなかった</li></ul></li></ul></section><section class='is-rounded nes-container with-title'><h2 class=title>やるかどうかわからない</h2><p>ジェネレータ部分を分離</p></section>"},"prev":{"title":"【ES.next】Objectから任意のキーを削除した新しいObjectを作成する","slug":"remove-object-key"},"next":{"title":"React StaticでTypeScriptを使用した時のエラー対処法","slug":"webpacks-rules-in-static-config-js"},"sameTags":[{"title":"ブログ開発をParcelに変更した","slug":"use-parcel","date":"2019-04-26","tags":["parcel","blog"]},{"title":"ブログで使用した技術","slug":"use-technology","date":"2018-06-30","tags":["blog","React","preact","TypeScript","ReactStatic"]},{"title":"react-strictでブログ作成しました","slug":"first-post","date":"2018-06-29","tags":["blog"]}]}}