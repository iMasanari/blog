{"component":1,"title":"HTMLでは使えないJSX独自の書き方 - Tech SANDBOX","props":{"post":{"title":"HTMLでは使えないJSX独自の書き方","description":"HTMLとReact JSXの書き方の違いでハマったポイントをまとめた。","slug":"difference-between-jsx-and-html","tags":["React"],"date":"2018-08-13","contents":"<section class='is-rounded nes-container with-title'><h2 class=title>はじめに</h2><p>業務でHTML（Javaのjsp）を書いている時、select要素の初期値をReactのJSXの感覚で書いたら動かなかった。HTMLとJSXとでは書き方が違ったのだ。</p></section><section class='is-rounded nes-container with-title'><h2 class=title>select要素</h2><p>ReactのJSXでは、select要素のvalue属性にその値を入れることでの初期値を決めることができる。</p><pre class=language-jsx><code class=language-jsx><span class='token keyword'>const</span> <span class='token function function-variable'>Component</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token operator'>=></span>\n  <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>select</span> <span class='token attr-name'>value</span><span class='token attr-value'><span class='token punctuation'>=</span><span class='token punctuation'>\"</span>bar<span class='token punctuation'>\"</span></span><span class='token punctuation'>></span></span><span class='token plain-text'>\n    </span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>option</span> <span class='token attr-name'>value</span><span class='token attr-value'><span class='token punctuation'>=</span><span class='token punctuation'>\"</span>foo<span class='token punctuation'>\"</span></span><span class='token punctuation'>></span></span><span class='token plain-text'>FOO</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>option</span><span class='token punctuation'>></span></span><span class='token plain-text'>\n    </span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>option</span> <span class='token attr-name'>value</span><span class='token attr-value'><span class='token punctuation'>=</span><span class='token punctuation'>\"</span>bar<span class='token punctuation'>\"</span></span><span class='token punctuation'>></span></span><span class='token plain-text'>BAR</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>option</span><span class='token punctuation'>></span></span><span class='token plain-text'>\n  </span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>select</span><span class='token punctuation'>></span></span>\n</code></pre><p>一方HTMLでは、初期値にするoption要素へselected属性を指定する必要がある。</p><pre class=language-html><code class=language-html><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>select</span><span class='token punctuation'>></span></span>\n  <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>option</span> <span class='token attr-name'>value</span><span class='token attr-value'><span class='token punctuation'>=</span><span class='token punctuation'>\"</span>foo<span class='token punctuation'>\"</span></span><span class='token punctuation'>></span></span>FOO<span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>option</span><span class='token punctuation'>></span></span>\n  <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>option</span> <span class='token attr-name'>value</span><span class='token attr-value'><span class='token punctuation'>=</span><span class='token punctuation'>\"</span>bar<span class='token punctuation'>\"</span></span> <span class='token attr-name'>selected</span><span class='token punctuation'>></span></span>BAR<span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>option</span><span class='token punctuation'>></span></span>\n<span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>select</span><span class='token punctuation'>></span></span>\n</code></pre></section><section class='is-rounded nes-container with-title'><h2 class=title>閉じタグ</h2><p>JSXでは閉じタグは省略できないが、HTMLでは、省略できる要素がある。</p><pre class=language-html><code class=language-html><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>ul</span><span class='token punctuation'>></span></span>\n  <span class='token comment'>&lt;!-- JSXでは文法エラー --></span>\n  <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>li</span><span class='token punctuation'>></span></span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>p</span><span class='token punctuation'>></span></span>foo\n  <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>li</span><span class='token punctuation'>></span></span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>p</span><span class='token punctuation'>></span></span>bar\n<span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>ul</span><span class='token punctuation'>></span></span>\n</code></pre><p>一方で空要素は、JSXでは全てのタグで<code>&lt;div /&gt;</code>と終了タグを省略できるが、HTMLでは<code>&lt;img /&gt;</code>のような必ず空要素のタグでしか省略することができない。</p><pre class=language-html><code class=language-html><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>body</span><span class='token punctuation'>></span></span>\n  <span class='token comment'>&lt;!-- HTMLでは正しくパースされない --></span>\n  <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>div</span> <span class='token attr-name'>id</span><span class='token attr-value'><span class='token punctuation'>=</span><span class='token punctuation'>\"</span>app<span class='token punctuation'>\"</span></span> <span class='token punctuation'>/></span></span>\n  <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>script</span> <span class='token attr-name'>src</span><span class='token attr-value'><span class='token punctuation'>=</span><span class='token punctuation'>\"</span>/bundle.js<span class='token punctuation'>\"</span></span> <span class='token punctuation'>/></span></span>\n<span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>body</span><span class='token punctuation'>></span></span>\n</code></pre></section>"},"prev":{"title":"Rust + wasm-bindgen + WebWorkerの環境構築","slug":"wasm-bindgen-with-worker"},"next":{"title":"私の必要最低限な環境構築","slug":"environment-construction"},"sameTags":[{"title":"ブログで使用した技術","slug":"use-technology","date":"2018-06-30","tags":["blog","React","preact","TypeScript","ReactStatic"]}]}}